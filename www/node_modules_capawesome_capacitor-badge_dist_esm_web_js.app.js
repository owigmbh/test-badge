"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkdentaLink_App"] = self["webpackChunkdentaLink_App"] || []).push([["node_modules_capawesome_capacitor-badge_dist_esm_web_js"],{

/***/ "../node_modules/@capawesome/capacitor-badge/dist/esm/web.js":
/*!*******************************************************************!*\
  !*** ../node_modules/@capawesome/capacitor-badge/dist/esm/web.js ***!
  \*******************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"BadgeWeb\": function() { return /* binding */ BadgeWeb; }\n/* harmony export */ });\n/* harmony import */ var _capacitor_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @capacitor/core */ \"../node_modules/@capacitor/core/dist/index.js\");\n\r\nclass BadgeWeb extends _capacitor_core__WEBPACK_IMPORTED_MODULE_0__.WebPlugin {\r\n    constructor() {\r\n        super();\r\n        this.restore();\r\n    }\r\n    async checkPermissions() {\r\n        return { display: 'granted' };\r\n    }\r\n    async requestPermissions() {\r\n        return { display: 'granted' };\r\n    }\r\n    async get() {\r\n        const value = localStorage.getItem(BadgeWeb.STORAGE_KEY);\r\n        const count = value ? parseInt(value, 10) : 0;\r\n        return { count };\r\n    }\r\n    async set(options) {\r\n        const count = options.count;\r\n        if (count === 0) {\r\n            await navigator.clearAppBadge();\r\n        }\r\n        else {\r\n            await navigator.setAppBadge(count);\r\n        }\r\n        const value = count.toString();\r\n        localStorage.setItem(BadgeWeb.STORAGE_KEY, value);\r\n    }\r\n    async increase() {\r\n        const { count } = await this.get();\r\n        await this.set({ count: count + 1 });\r\n    }\r\n    async decrease() {\r\n        const { count } = await this.get();\r\n        if (count < 1) {\r\n            return;\r\n        }\r\n        await this.set({ count: count - 1 });\r\n    }\r\n    async clear() {\r\n        await this.set({ count: 0 });\r\n    }\r\n    async isSupported() {\r\n        const result = {\r\n            isSupported: 'setAppBadge' in navigator,\r\n        };\r\n        return result;\r\n    }\r\n    async restore() {\r\n        const value = localStorage.getItem(BadgeWeb.STORAGE_KEY);\r\n        if (!value) {\r\n            return;\r\n        }\r\n        const count = parseInt(value, 10);\r\n        await navigator.setAppBadge(count);\r\n    }\r\n}\r\nBadgeWeb.STORAGE_KEY = 'capacitor.badge';\r\n//# sourceMappingURL=web.js.map\n\n//# sourceURL=webpack://dentaLink-App/../node_modules/@capawesome/capacitor-badge/dist/esm/web.js?");

/***/ })

}]);