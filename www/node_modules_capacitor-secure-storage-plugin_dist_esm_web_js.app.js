"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkdentaLink_App"] = self["webpackChunkdentaLink_App"] || []).push([["node_modules_capacitor-secure-storage-plugin_dist_esm_web_js"],{

/***/ "../node_modules/capacitor-secure-storage-plugin/dist/esm/web.js":
/*!***********************************************************************!*\
  !*** ../node_modules/capacitor-secure-storage-plugin/dist/esm/web.js ***!
  \***********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"SecureStoragePluginWeb\": function() { return /* binding */ SecureStoragePluginWeb; }\n/* harmony export */ });\n/* harmony import */ var _capacitor_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @capacitor/core */ \"../node_modules/@capacitor/core/dist/index.js\");\n\nclass SecureStoragePluginWeb extends _capacitor_core__WEBPACK_IMPORTED_MODULE_0__.WebPlugin {\n    constructor() {\n        super(...arguments);\n        this.PREFIX = 'cap_sec_';\n        this.addPrefix = (key) => this.PREFIX + key;\n        this.removePrefix = (key) => key.replace(this.PREFIX, '');\n    }\n    get(options) {\n        const value = localStorage.getItem(this.addPrefix(options.key));\n        return value !== null\n            ? Promise.resolve({\n                value: atob(value),\n            })\n            : Promise.reject('Item with given key does not exist');\n    }\n    set(options) {\n        localStorage.setItem(this.addPrefix(options.key), btoa(options.value));\n        return Promise.resolve({ value: true });\n    }\n    remove(options) {\n        if (localStorage.getItem(this.addPrefix(options.key))) {\n            localStorage.removeItem(this.addPrefix(options.key));\n            return Promise.resolve({ value: true });\n        }\n        else {\n            return Promise.reject('Item with given key does not exist');\n        }\n    }\n    clear() {\n        for (const key in localStorage) {\n            if (key.indexOf(this.PREFIX) === 0) {\n                localStorage.removeItem(key);\n            }\n        }\n        return Promise.resolve({ value: true });\n    }\n    keys() {\n        const keys = Object.keys(localStorage)\n            .filter(k => k.indexOf(this.PREFIX) === 0)\n            .map(this.removePrefix);\n        return Promise.resolve({ value: keys });\n    }\n    getPlatform() {\n        return Promise.resolve({ value: 'web' });\n    }\n}\n//# sourceMappingURL=web.js.map\n\n//# sourceURL=webpack://dentaLink-App/../node_modules/capacitor-secure-storage-plugin/dist/esm/web.js?");

/***/ })

}]);